import"./navigation-BKABZ8co.js";import{B as a,H as i,a as m,T as e}from"./TextPanel-9is5Tvyg.js";function u(){return React.createElement("div",{id:"comicSmall"},React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(14px,1.4vw,22px)"}},"Overview"),height:100,blank:"#FF4E4E",center:!0},{text:React.createElement("span",null,"My ",React.createElement("b",{style:{color:"red"}},"portfolio website")," is designed to showcase not only my ",React.createElement("em",{style:{textDecoration:"underline"}},"projects")," but also my ",React.createElement("em",{style:{textDecoration:"underline"}},"skillset")," through the use of various frameworks and technologies across different sections of the site. Each page of the website is built with a specific framework, carefully chosen to highlight both my technical abilities and the strengths of the tools used."),center:!0}]}),React.createElement("div",null),React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Tailwind CSS"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,React.createElement("b",{style:{color:"#38bdf8"}},React.createElement("em",null,"Tailwind CSS"))," was chosen for the ",React.createElement("b",{style:{textDecoration:"underline"}},"home page")," because of its ",React.createElement("b",null,React.createElement("em",null,"utility-first design philosophy")),", which allows for ",React.createElement("em",null,"rapid")," and ",React.createElement("em",null,"flexible")," styling. I wanted the home page to be highly customizable, responsive, and visually appealing while maintaining a clean, minimal codebase. ",React.createElement("b",{style:{color:"#38bdf8"}},"Tailwind"),"’s pre-defined utility classes provide the perfect balance between design and functionality."),height:100}]}),React.createElement("div",null),React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"HTML/CSS/JavaScript"),blank:"#4AC936",center:!0},{text:React.createElement("span",null," The ",React.createElement("b",{style:{textDecoration:"underline"}},"about page")," is designed with plain ",React.createElement("b",{style:{color:"red"}},React.createElement("em",null,"HTML")),", ",React.createElement("b",{style:{color:"royalblue"}},React.createElement("em",null,"CSS")),", and ",React.createElement("b",{style:{color:"orange"}},React.createElement("em",null,"JavaScript")),". This choice was deliberate, as I wanted to demonstrate my ability to work without relying on frameworks, showcasing my proficiency in core web development technologies."),height:100}]}),React.createElement("div",null),React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Bootstrap"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,"For the ",React.createElement("b",{style:{textDecoration:"underline"}},"projects page"),", I selected ",React.createElement("b",{style:{color:"darkviolet"}},React.createElement("em",null,"Bootstrap"))," primarily because of its ",React.createElement("b",null,React.createElement("em",null,"robust grid system"))," and ",React.createElement("b",null,React.createElement("em",null,"well-established components")),", making it ",React.createElement("em",null,"ideal")," for managing multiple project layouts efficiently. The goal was to create a layout that could clearly present several projects without overwhelming the user, and ",React.createElement("b",{style:{color:"darkviolet"}},"Bootstrap"),"’s features were a perfect fit"),height:100}]}),React.createElement("div",null),React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"REACT"),blank:"#4AC936",center:!0},{text:React.createElement("span",null," ",React.createElement("b",{style:{textDecoration:"underline"}},"Each individual project information page")," is built with ",React.createElement("b",{style:{color:"hotpink"}},React.createElement("em",null,"React")),", utilizing its ",React.createElement("b",null,"component-based architecture"),". This allowed me to create a ",React.createElement("span",{style:{textDecoration:"underline"}},"comic panel-style layout")," for ",React.createElement("em",null,"each")," project, while reusing components to minimize code redundancy. Despite ",React.createElement("b",{style:{color:"hotpink"}},"React")," typically being a single-page framework, I implemented workarounds to integrate it with the multi-page structure of my website."),height:100}]}),React.createElement("div",null),React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Gsap"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,"Across ",React.createElement("b",{style:{textDecoration:"underline"}},"all pages"),", I implemented ",React.createElement("b",{style:{color:"#33cc33"}},React.createElement("em",null,"GSAP"))," for its ",React.createElement("b",null,"advanced animation")," capabilities and ability to add a polished, interactive feel to the site. My decision to use ",React.createElement("b",{style:{color:"#33cc33"}},"GSAP")," was driven by its ability to create ",React.createElement("em",null,"smooth"),", ",React.createElement("em",null,"precise"),", and ",React.createElement("em",null,"flexible")," animations that ",React.createElement("b",null,"enhance the user experience")," without sacrificing performance as well as being able to seamlessly integrate across various frameworks and plain JavaScript, which was essential for my multi-framework portfolio. Additionally ",React.createElement("b",{style:{color:"#33cc33"}})," enables complex interactive animations that contribute meaningfully to the overall user experience."),height:100}]}))}function d(){return React.createElement("div",{id:"comicMedium"},React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(14px,1.4vw,22px)"}},"Overview"),height:100,blank:"#FF4E4E",center:!0},{text:React.createElement("span",null,"My ",React.createElement("b",{style:{color:"red"}},"portfolio website")," is designed to showcase not only my ",React.createElement("em",{style:{textDecoration:"underline"}},"projects")," but also my ",React.createElement("em",{style:{textDecoration:"underline"}},"skillset")," through the use of various frameworks and technologies across different sections of the site. Each page of the website is built with a specific framework, carefully chosen to highlight both my technical abilities and the strengths of the tools used."),center:!0}]}),React.createElement("div",null),React.createElement("div",{className:"row"},React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Tailwind CSS"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,React.createElement("b",{style:{color:"#38bdf8"}},React.createElement("em",null,"Tailwind CSS"))," was chosen for the ",React.createElement("b",{style:{textDecoration:"underline"}},"home page")," because of its ",React.createElement("b",null,React.createElement("em",null,"utility-first design philosophy")),", which allows for ",React.createElement("em",null,"rapid")," and ",React.createElement("em",null,"flexible")," styling. I wanted the home page to be highly customizable, responsive, and visually appealing while maintaining a clean, minimal codebase. ",React.createElement("b",{style:{color:"#38bdf8"}},"Tailwind"),"’s pre-defined utility classes provide the perfect balance between design and functionality."),height:100}]}),React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"HTML/CSS/JavaScript"),blank:"#4AC936",center:!0},{text:React.createElement("span",null," The ",React.createElement("b",{style:{textDecoration:"underline"}},"about page")," is designed with plain ",React.createElement("b",{style:{color:"red"}},React.createElement("em",null,"HTML")),", ",React.createElement("b",{style:{color:"royalblue"}},React.createElement("em",null,"CSS")),", and ",React.createElement("b",{style:{color:"orange"}},React.createElement("em",null,"JavaScript")),". This choice was deliberate, as I wanted to demonstrate my ability to work without relying on frameworks, showcasing my proficiency in core web development technologies."),height:100}]})),React.createElement("div",{className:"row"},React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Bootstrap"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,"For the ",React.createElement("b",{style:{textDecoration:"underline"}},"projects page"),", I selected ",React.createElement("b",{style:{color:"darkviolet"}},React.createElement("em",null,"Bootstrap"))," primarily because of its ",React.createElement("b",null,React.createElement("em",null,"robust grid system"))," and ",React.createElement("b",null,React.createElement("em",null,"well-established components")),", making it ",React.createElement("em",null,"ideal")," for managing multiple project layouts efficiently. The goal was to create a layout that could clearly present several projects without overwhelming the user, and ",React.createElement("b",{style:{color:"darkviolet"}},"Bootstrap"),"’s features were a perfect fit"),height:100}]}),React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"REACT"),blank:"#4AC936",center:!0},{text:React.createElement("span",null," ",React.createElement("b",{style:{textDecoration:"underline"}},"Each individual project information page")," is built with ",React.createElement("b",{style:{color:"hotpink"}},React.createElement("em",null,"React")),", utilizing its ",React.createElement("b",null,"component-based architecture"),". This allowed me to create a ",React.createElement("span",{style:{textDecoration:"underline"}},"comic panel-style layout")," for ",React.createElement("em",null,"each")," project, while reusing components to minimize code redundancy. Despite ",React.createElement("b",{style:{color:"hotpink"}},"React")," typically being a single-page framework, I implemented workarounds to integrate it with the multi-page structure of my website."),height:100}]})),React.createElement("div",{className:"row"},React.createElement(e,{width:"25",array:[{blank:"#424242",height:100}]}),React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Gsap"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,"Across ",React.createElement("b",{style:{textDecoration:"underline"}},"all pages"),", I implemented ",React.createElement("b",{style:{color:"#33cc33"}},React.createElement("em",null,"GSAP"))," for its ",React.createElement("b",null,"advanced animation")," capabilities and ability to add a polished, interactive feel to the site. My decision to use ",React.createElement("b",{style:{color:"#33cc33"}},"GSAP")," was driven by its ability to create ",React.createElement("em",null,"smooth"),", ",React.createElement("em",null,"precise"),", and ",React.createElement("em",null,"flexible")," animations that ",React.createElement("b",null,"enhance the user experience")," without sacrificing performance as well as being able to seamlessly integrate across various frameworks and plain JavaScript, which was essential for my multi-framework portfolio. Additionally ",React.createElement("b",{style:{color:"#33cc33"}})," enables complex interactive animations that contribute meaningfully to the overall user experience."),height:100}]}),React.createElement(e,{width:"25",array:[{blank:"#424242",height:100}]})))}function p(){return React.createElement("div",{id:"comicLarge"},React.createElement(e,{width:"100",array:[{text:React.createElement("span",{style:{fontSize:"clamp(14px,1.4vw,22px)"}},"Overview"),height:100,blank:"#FF4E4E",center:!0},{text:React.createElement("div",null,React.createElement("span",null,"My ",React.createElement("b",{style:{color:"red"}},"portfolio website")," is designed to showcase not only my ",React.createElement("em",{style:{textDecoration:"underline"}},"projects")," but also my ",React.createElement("em",{style:{textDecoration:"underline"}},"skillset")," through the use of various frameworks and technologies across different sections of the site. Each page of the website is built with a specific framework, carefully chosen to highlight both my technical abilities and the strengths of the tools used.")),center:!0}]}),React.createElement("div",null),React.createElement("div",{className:"row"},React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Tailwind CSS"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,React.createElement("b",{style:{color:"#38bdf8"}},React.createElement("em",null,"Tailwind CSS"))," was chosen for the ",React.createElement("b",{style:{textDecoration:"underline"}},"home page")," because of its ",React.createElement("b",null,React.createElement("em",null,"utility-first design philosophy")),", which allows for ",React.createElement("em",null,"rapid")," and ",React.createElement("em",null,"flexible")," styling. I wanted the home page to be highly customizable, responsive, and visually appealing while maintaining a clean, minimal codebase. ",React.createElement("b",{style:{color:"#38bdf8"}},"Tailwind"),"’s pre-defined utility classes provide the perfect balance between design and functionality."),height:100}]}),React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"HTML/CSS/JavaScript"),blank:"#4AC936",center:!0},{text:React.createElement("span",null," The ",React.createElement("b",{style:{textDecoration:"underline"}},"about page")," is designed with plain ",React.createElement("b",{style:{color:"red"}},React.createElement("em",null,"HTML")),", ",React.createElement("b",{style:{color:"royalblue"}},React.createElement("em",null,"CSS")),", and ",React.createElement("b",{style:{color:"orange"}},React.createElement("em",null,"JavaScript")),". This choice was deliberate, as I wanted to demonstrate my ability to work without relying on frameworks, showcasing my proficiency in core web development technologies."),height:100}]})),React.createElement("div",{className:"row"},React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Bootstrap"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,"For the ",React.createElement("b",{style:{textDecoration:"underline"}},"projects page"),", I selected ",React.createElement("b",{style:{color:"darkviolet"}},React.createElement("em",null,"Bootstrap"))," primarily because of its ",React.createElement("b",null,React.createElement("em",null,"robust grid system"))," and ",React.createElement("b",null,React.createElement("em",null,"well-established components")),", making it ",React.createElement("em",null,"ideal")," for managing multiple project layouts efficiently. The goal was to create a layout that could clearly present several projects without overwhelming the user, and ",React.createElement("b",{style:{color:"darkviolet"}},"Bootstrap"),"’s features were a perfect fit"),height:100}]}),React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"REACT"),blank:"#4AC936",center:!0},{text:React.createElement("span",null," ",React.createElement("b",{style:{textDecoration:"underline"}},"Each individual project information page")," is built with ",React.createElement("b",{style:{color:"hotpink"}},React.createElement("em",null,"React")),", utilizing its ",React.createElement("b",null,"component-based architecture"),". This allowed me to create a ",React.createElement("span",{style:{textDecoration:"underline"}},"comic panel-style layout")," for ",React.createElement("em",null,"each")," project, while reusing components to minimize code redundancy. Despite ",React.createElement("b",{style:{color:"hotpink"}},"React")," typically being a single-page framework, I implemented workarounds to integrate it with the multi-page structure of my website."),height:100}]})),React.createElement("div",{className:"row"},React.createElement(e,{width:"25",array:[{blank:"#424242",height:100}]}),React.createElement(e,{width:"50",array:[{text:React.createElement("span",{style:{fontSize:"clamp(12px,1.2vw,18px)"}},"Gsap"),blank:"#4AC936",center:!0},{text:React.createElement("span",null,"Across ",React.createElement("b",{style:{textDecoration:"underline"}},"all pages"),", I implemented ",React.createElement("b",{style:{color:"#33cc33"}},React.createElement("em",null,"GSAP"))," for its ",React.createElement("b",null,"advanced animation")," capabilities and ability to add a polished, interactive feel to the site. My decision to use ",React.createElement("b",{style:{color:"#33cc33"}},"GSAP")," was driven by its ability to create ",React.createElement("em",null,"smooth"),", ",React.createElement("em",null,"precise"),", and ",React.createElement("em",null,"flexible")," animations that ",React.createElement("b",null,"enhance the user experience")," without sacrificing performance as well as being able to seamlessly integrate across various frameworks and plain JavaScript, which was essential for my multi-framework portfolio. Additionally ",React.createElement("b",{style:{color:"#33cc33"}})," enables complex interactive animations that contribute meaningfully to the overall user experience."),height:100}]}),React.createElement(e,{width:"25",array:[{blank:"#424242",height:100}]})))}let t=null;const h=document.getElementById("root"),l=ReactDOM.createRoot(h),n="Parsabaghaie.com",c=2.7,r="empty",o=54;function s(){window.innerWidth>=1024?t!==1&&(t=1,l.render(React.createElement("div",null,React.createElement(a,null),React.createElement(i,{title:n,fontsize:c,link:r,fontMax:o}),React.createElement(p,null)))):window.innerWidth>=768&&window.innerWidth<1024?t!==2&&(t=2,l.render(React.createElement("div",null,React.createElement(a,null),React.createElement(i,{title:n,fontsize:c,link:r,fontMax:o}),React.createElement(d,null)))):t!==3&&(t=3,l.render(React.createElement("div",null,React.createElement(a,null),React.createElement(m,{title:n,fontsize:c*1.9,link:r}),React.createElement(u,null))))}s();window.addEventListener("resize",s);
